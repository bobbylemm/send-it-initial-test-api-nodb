{"version":3,"sources":["../../middlewares/validateLogin.js"],"names":["validateLogin","req","res","next","body","Email","password","emailRegex","test","helpers","handleError"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,gBAAgB,SAAhBA,aAAgB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,oBACVF,IAAIG,IADM;AAAA,QAC9BC,KAD8B,aAC9BA,KAD8B;AAAA,QACvBC,QADuB,aACvBA,QADuB;;AAEtC,QAAMC,aAAa,cAAnB;AACA,QAAI,CAACA,WAAWC,IAAX,CAAgBH,KAAhB,CAAL,EAA6B;AACzB,eAAOF,KAAKM,sBAAQC,WAAR,CAAoB,yBAApB,CAAL,CAAP;AACH;AACD,QAAI,CAACL,KAAL,EAAY;AACR,eAAOF,KAAKM,sBAAQC,WAAR,CAAoB,8BAApB,CAAL,CAAP;AACH;AACD,QAAI,CAACJ,QAAL,EAAe;AACX,eAAOH,KAAKM,sBAAQC,WAAR,CAAoB,2BAApB,CAAL,CAAP;AACH;AACD,WAAOP,MAAP;AACH,CAbD;kBAceH,a","file":"validateLogin.js","sourcesContent":["import helpers from '../helpers/handleError';\n\nconst validateLogin = (req, res, next) => {\n    const { Email, password } = req.body;\n    const emailRegex = /\\S+@\\S+\\.\\S+/;\n    if (!emailRegex.test(Email)) {\n        return next(helpers.handleError('this email is not valid'))\n    }\n    if (!Email) {\n        return next(helpers.handleError('please fill in a valid email'))\n    }\n    if (!password) {\n        return next(helpers.handleError('please fill in a password'))\n    }\n    return next();\n}\nexport default validateLogin;"]}