{"version":3,"sources":["../../routes/route.js"],"names":["router","express","Router","get","middlewares","validateToken","validateAdmin","parcelController","getAllParcels","post","validateParcels","createNewParcel","getSpecificParcel","put","validateParcelStatusUpdate","updateParcelStatus","validateLocationUpdate","updateParcelPresentLocation","delete","deleteSpecificParcel","usersControllers","getAllUsers","getAllParcelsByUser","updateParcelDestination","validateRegister","registerUser","validateLogin","login"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;AACA;AACA;AACAF,OAAOG,GAAP,CAAW,UAAX,EAAuBC,gBAAYC,aAAnC,EAAkDD,gBAAYE,aAA9D,EAA6EC,4BAAiBC,aAA9F;AACA;AACA;AACAR,OAAOS,IAAP,CAAY,UAAZ,EAAwBL,gBAAYC,aAApC,EAAmDD,gBAAYM,eAA/D,EAAgFH,4BAAiBI,eAAjG;AACA;AACA;AACAX,OAAOG,GAAP,CAAW,cAAX,EAA2BI,4BAAiBK,iBAA5C;AACA;AACA;AACAZ,OAAOa,GAAP,CAAW,sBAAX,EAAmCT,gBAAYU,0BAA/C,EAA2EV,gBAAYC,aAAvF,EAAsGD,gBAAYE,aAAlH,EAAiIC,4BAAiBQ,kBAAlJ;AACA;AACA;AACAf,OAAOa,GAAP,CAAW,+BAAX,EAA4CT,gBAAYY,sBAAxD,EAAgFZ,gBAAYC,aAA5F,EAA2GD,gBAAYE,aAAvH,EAAsIC,4BAAiBU,2BAAvJ;AACA;AACA;AACAjB,OAAOkB,MAAP,CAAc,qBAAd,EAAqCX,4BAAiBY,oBAAtD;;AAEA;AACA;AACAnB,OAAOG,GAAP,CAAW,QAAX,EAAqBiB,2BAAiBC,WAAtC;AACA;AACA;AACArB,OAAOG,GAAP,CAAW,qBAAX,EAAkCiB,2BAAiBE,mBAAnD;AACA;AACAtB,OAAOS,IAAP,CAAY,kBAAZ,EAAgCW,2BAAiBG,uBAAjD;AACA;AACA;AACAvB,OAAOS,IAAP,CAAY,WAAZ,EAAwBL,gBAAYoB,gBAApC,EAAsDJ,2BAAiBK,YAAvE;AACA;AACAzB,OAAOS,IAAP,CAAY,QAAZ,EAAqBL,gBAAYsB,aAAjC,EAAgDN,2BAAiBO,KAAjE;;kBAEe3B,M","file":"route.js","sourcesContent":["import express from 'express';\nimport parcelController from '../controllers/parcelControllers';\nimport usersControllers from '../controllers/usersControllers';\nimport middlewares from '../middlewares/index';\n\nconst router = express.Router();\n// this is the route to get all parcels\n// GET ALL PARCELS\nrouter.get('/parcels', middlewares.validateToken, middlewares.validateAdmin, parcelController.getAllParcels)\n// this is the route for creating parcels\n// CREATE PARCELS\nrouter.post('/parcels', middlewares.validateToken, middlewares.validateParcels, parcelController.createNewParcel)\n// this is the route to get a specific parcel\n// GET A SPECIFIC PARCEL\nrouter.get('/parcels/:id', parcelController.getSpecificParcel)\n// this is to update the status of an existing parcel order\n// PUT A STATUS UPDATE\nrouter.put('/parcels/:pid/status', middlewares.validateParcelStatusUpdate, middlewares.validateToken, middlewares.validateAdmin, parcelController.updateParcelStatus)\n// this is to update the presentlocation of an existing parcel order\n// PUT A PRESENT LOCATION UPDATE\nrouter.put('/parcels/:pid/presentlocation', middlewares.validateLocationUpdate, middlewares.validateToken, middlewares.validateAdmin, parcelController.updateParcelPresentLocation)\n// this is to delete a specific parcel\n// DELETE A SPECIFIC ROUTE\nrouter.delete('/parcels/:id/delete', parcelController.deleteSpecificParcel)\n\n// this is to get all users \n// GET ALL USERS\nrouter.get('/users', usersControllers.getAllUsers)\n// fetch all parcels for a given user\n// GET ALL PARCELS FOR A GIVEN USER\nrouter.get('/users/:uid/parcels', usersControllers.getAllParcelsByUser)\n// this is to change the destination of a parcel order \nrouter.post('/users/:pid/:uid', usersControllers.updateParcelDestination)\n// this to register a new user\n// POST A NEW USER\nrouter.post('/register',middlewares.validateRegister, usersControllers.registerUser)\n// this is to login in an existing user// \nrouter.post('/login',middlewares.validateLogin, usersControllers.login)\n\nexport default router;"]}