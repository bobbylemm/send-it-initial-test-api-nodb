{"version":3,"sources":["../../controllers/usersControllers.js"],"names":["db","dbManager","userrManager","userManager","usersControllers","req","res","userEmail","body","email","userName","username","password","registerUser","err","console","log","findUser","helper","findUsers","allUsers","loggedIn","status","json","message","currentUser","userId","params","id","user","error"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAMA,KAAK,IAAIC,mBAAJ,EAAX;AACA,IAAMC,eAAe,IAAIC,qBAAJ,CAAgBH,EAAhB,CAArB;;IAEMI,gB;;;;;;;qCACmBC,G,EAAKC,G,EAAK;AAC3B,gBAAIC,YAAYF,IAAIG,IAAJ,CAASC,KAAzB;AAAA,gBAAgCC,WAAWL,IAAIG,IAAJ,CAASG,QAApD;AAAA,gBAA8DC,WAAWP,IAAIG,IAAJ,CAASI,QAAlF;AACAV,yBAAaW,YAAb,CAA0BN,SAA1B,EAAqCG,QAArC,EAA+CE,QAA/C,EAAyD,UAACE,GAAD,EAAMR,GAAN,EAAc;AACnES,wBAAQC,GAAR,CAAYF,GAAZ,EAAiBR,GAAjB;AACH,aAFD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACD;;;;8BACcD,G,EAAKC,G,EAAK;AACpB,gBAAIC,YAAYF,IAAIG,IAAJ,CAASC,KAAzB;AAAA,gBAAgCG,WAAWP,IAAIG,IAAJ,CAASI,QAApD;AACA,gBAAMK,WAAWC,oBAAOC,SAAP,CAAiBC,iBAAjB,EAA2B,OAA3B,EAAoCb,SAApC,CAAjB;AACA,gBAAIU,QAAJ,EAAc;AACVA,yBAASI,QAAT,GAAoB,IAApB;AACA,uBAAOf,IAAIgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,6BAAS,wBADe;AAExBC,iCAAaR;AAFW,iBAArB,CAAP;AAIH,aAND,MAMM;AACF,uBAAOX,IAAIgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,6BAAS;AADe,iBAArB,CAAP;AAGH;AACJ;AACD;;;;4CAC4BnB,G,EAAKC,G,EAAK;AAClC,gBAAIoB,SAASrB,IAAIsB,MAAJ,CAAWC,EAAxB;AACA,gBAAMX,WAAWC,oBAAOC,SAAP,CAAiBC,iBAAjB,EAA2B,IAA3B,EAAiCM,MAAjC,CAAjB;AACA,gBAAIT,QAAJ,EAAc;AACVX,oBAAIiB,IAAJ,CAAS;AACLM,0BAAMZ;AADD,iBAAT;AAGH,aAJD,MAIM;AACFX,oBAAIiB,IAAJ,CAAS;AACLO,2BAAO;AADF,iBAAT;AAGH;AACJ;AACD;;;;oCACoBzB,G,EAAKC,G,EAAK;AAC1B,mBAAOA,IAAIiB,IAAJ,CAAS;AACZH,0BAAUA;AADE,aAAT,CAAP;AAGH;;;;;;kBAGUhB,gB","file":"usersControllers.js","sourcesContent":["import allUsers from '../database/usersdb';\nimport helper from '../helpers/findUsers';\nimport userManager from './userManager';\nimport dbManager from '../dbManager/dbManager';\n\nconst db = new dbManager();\nconst userrManager = new userManager(db);\n\nclass usersControllers {\n    static registerUser (req, res) {\n        let userEmail = req.body.email, userName = req.body.username, password = req.body.password;\n        userrManager.registerUser(userEmail, userName, password, (err, res) => {\n            console.log(err, res);\n        })\n        // let newId = allUsers[allUsers.length - 1].id + 1;\n        // const checkUser = helper.findUsers(allUsers, 'email', userEmail);\n        // if (!checkUser) {\n        //     let newUser = {\n        //         id: newId,\n        //         email: userEmail,\n        //         username: userName,\n        //         password: password,\n        //         parcels: []\n        //     };\n        //     allUsers.push(newUser);\n        //     return res.status(200).json({\n        //         message: \"you have been successfully registered\"\n        //     })\n        // }else {\n        //     return res.status(400).json({\n        //         message: \"you are already registered\"\n        //     })\n        // }\n    }\n    // this is to login a user\n    static login (req, res) {\n        let userEmail = req.body.email, password = req.body.password;\n        const findUser = helper.findUsers(allUsers, 'email', userEmail);\n        if (findUser) {\n            findUser.loggedIn = true;\n            return res.status(200).json({\n                message: \"successfully logged in\",\n                currentUser: findUser\n            })\n        }else {\n            return res.status(400).json({\n                message: \"error logging in\"\n            })\n        }\n    }\n    // this is to get all parcels created by a user\n    static getAllParcelsByUser (req, res) {\n        let userId = req.params.id;\n        const findUser = helper.findUsers(allUsers, 'id', userId);\n        if (findUser) {\n            res.json({\n                user: findUser\n            })\n        }else {\n            res.json({\n                error: \"there is an error\"\n            })\n        }\n    }\n    // this is to get all users\n    static getAllUsers (req, res) {\n        return res.json({\n            allUsers: allUsers\n        })\n    }\n}\n\nexport default usersControllers;"]}