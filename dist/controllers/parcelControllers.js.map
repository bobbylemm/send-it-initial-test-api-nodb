{"version":3,"sources":["../../controllers/parcelControllers.js"],"names":["parcelController","req","res","console","log","user","parcelManager","getAllParcels","response","status","json","message","e","userId","user_id","initialStatus","body","packageName","pickupLocation","dropOfflocation","presentLocation","weight","price","addNewParcel","resp","getAllUsersParcelOrder","parcelId","params","id","pid","newStatus","updateParcelStatus","mail","mailTransport","sendMail","then","catch","err","messsage","newLocation","updateParcelPresentlocation","findParcel","helper","findUsers","allParcels","allCurrentParcels","filter","parcel","allparcel"],"mappings":"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","file":"parcelControllers.js","sourcesContent":["import allParcels from '../database/parceldb';\nimport allUsers from '../database/usersdb';\nimport helper from '../helpers/findUsers';\nimport parcelManager from './parcelsManager';\nimport mailTransport from '../mailer/sendMaile';\n\n\nclass parcelController {\n    // this is to get all parcels\n    static async getAllParcels (req, res) {\n        console.log('the request object', req.user);\n        try {\n            let response = await parcelManager.getAllParcels();\n            return res.status(200).json({\n            message: \"there was success\",\n            response\n        })\n        }catch (e) {\n            return res.status(400).json({\n                message: \"error in retrieving\",\n                e\n            })\n        }\n    }\n\n    // this is to post a particular question\n    static async createNewParcel(req, res) {\n        const userId = req.user.user.user_id;\n        const initialStatus = 'processing'\n        const { packageName, pickupLocation, dropOfflocation, presentLocation, weight, price } = req.body;\n        try {\n            const response = await parcelManager.addNewParcel(packageName, pickupLocation, dropOfflocation, presentLocation, weight, price, initialStatus, userId);\n            return res.status(200).json({\n                message: 'new parcel created',\n                resp: response\n            })\n            console.log(resp)\n        }catch(e) {\n            return res.status(400).json({\n                message: \"parcel could not be added\",\n            });\n       }\n    }\n    // this is to get a specific parcel form a specific user\n    static async getParcelsByUser(req, res) {\n        const { userId } = req.body;\n        try {\n            let response = await parcelManager.getAllUsersParcelOrder(userId);\n            res.status(200).json({\n                message: 'got all this users parcels',\n                response\n            })\n            console.log(response)\n        }catch(e) {\n            console.log(e)\n        }\n        // parManager.getAllUsersParcelOrder(userId, (err, res) => {\n        //     const allUsersParcels = res;\n        //     if (err) {\n        //         return res.status(400).json({\n        //             message: 'there was an error in trying to retrieve users parcels'\n        //         })\n        //     }else {\n        //         return res.status(200).json({\n        //             message: 'successfully fetched all user parcel',\n        //             parcels: res\n        //         })\n        //     }\n        // })\n    }\n\n    // this is to get a specific parcel\n    static getSpecificParcel (req, res) {\n        let parcelId = req.params.id;\n        // const findParcel = helper.findUsers(allParcels, 'id', parcelId);\n        // if (findParcel) {\n        //     return res.status(200).json({\n        //         message: \"the parcel was found\",\n        //         parcel: findParcel\n        //     })\n        // }else {\n        //     return res.status(400).json({\n        //         message: \"sorry the parcel was not found\"\n        //     })\n        // }\n    }\n    // this is to update a parcel order status\n    static updateParcelStatus (req, res) {\n        const parcelId = req.params.pid;\n        const { newStatus } = req.body;\n        try {\n            let response = parcelManager.updateParcelStatus(newStatus, parcelId);\n            let mail = mailTransport.sendMail();\n            mail.then(res => console.log('the response',res)).catch(err => console.log('the error',err));\n            return res.status(200).json({\n                messsage: 'parcel status was updated successfully'\n            })\n        }catch(e) {\n            return res.status(400).json({\n                message: 'could not update the parcel status'\n            })\n        }\n    }\n    // this is to update a parcel order present location\n    static updateParcelPresentLocation (req, res) {\n        const parcelId = req.params.pid;\n        const { newLocation } = req.body;\n        try {\n            let response = parcelManager.updateParcelPresentlocation(newLocation, parcelId);\n            return res.status(200).json({\n                messsage: 'parcel present location was updated successfully'\n            })\n        }catch(e) {\n            return res.status(400).json({\n                message: 'could not update the parcel present location'\n            })\n        }\n    }\n    \n    // this is to delete a specific parcel\n    static deleteSpecificParcel (req, res) {\n        let parcelId = req.params.id;\n        const findParcel = helper.findUsers(allParcels, 'id', parcelId);\n        if (findParcel) {\n            const allCurrentParcels = allParcels.filter(parcel => {\n                return parcel !== findParcel\n            })\n            res.status(200).json({\n                message: \"parcel successfully deleted\",\n                allparcel: allCurrentParcels\n            })\n        }else {\n            return res.status(400).json({\n                message: \"could not delete the parcel\"\n            })\n        }\n    }\n    \n}\nexport default parcelController;"]}