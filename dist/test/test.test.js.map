{"version":3,"sources":["../../test/test.test.js"],"names":["expect","chai","use","chaiHttp","describe","it","done","request","app","get","end","req","res","status","to","equal","body","be","an","parcels","id","err","message","put","delete","user1","allUsers","post","set","send","packageName","destination","pickupLocation","price","email","username","password"],"mappings":"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","file":"test.test.js","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport app from '../src/app';\nimport allUsers from '../database/usersdb';\nconst { expect } = chai;\n\nchai.use(chaiHttp);\n\ndescribe(\"get/parcels\", () => {\n    describe(\"get/parcels/:id\", () => {\n        describe(\"put/parcels/:id\", () => {\n            describe(\"delete/parcels/:id\", () => {\n                describe(\"post/parcels\", () => {\n                    describe(\"post/register\", () => {\n                        it(\"it should get all parcel orders\", (done) => {\n                            chai.request(app).get(\"/api/v1/parcels\").end((req, res) => {\n                                expect(res.status).to.equal(200);\n                                expect(res.body).to.be.an('object');\n                                expect(res.body.parcels).to.be.an('array');\n                                done();\n                            })\n                        })\n                        // \n                        it('should get a specific parcel order', (done) => {\n                            const id = 1;\n                            chai.request(app).get(`/api/v1/parcels/${id}`).end((err, res) => {\n                                expect(res.status).to.equal(200);\n                                expect(res.body).to.be.an('object');\n                                expect(res.body.message).to.equal(\"the parcel was found\");\n                                done();\n                            })\n                        })\n                        // for the put request\n                        it('should update the status of a parcel order', (done) => {\n                            const id = 1;\n                            chai.request(app)\n                            .put(`/api/v1/parcels/${id}`)\n                            .end((err, res) => {\n                                expect(res.status).to.equal(200);\n                                done();\n                            })\n                        })\n                        // this is the test for the delete end-point\n                        it('should delete a parcel order', (done) => {\n                            const id = 1;\n                            chai.request(app)\n                            .delete(`/api/v1/parcels/${id}`)\n                            .end((err, res) => {\n                                expect(res.status).to.equal(200);\n                                done();\n                            })\n                        }),\n                        it('should not create a parcel order if not logged in', (done) => {\n                            let user1 = allUsers[0]\n                            chai.request(app)\n                            .post('/api/v1/parcels')\n                            .set('content-type','application/json')\n                            .send({\n                                packageName: \"fridge\",\n                                destination: \"lagos\",\n                                pickupLocation: \"iyana ipaja\",\n                                status: \"enroute\",\n                                price: \"45000 naira\"\n                            })\n                            .end((err, res) => {\n                                expect(res.status).to.equal(400);\n                                expect(res.body.message).to.equal('could not add new parcel')\n                                done();\n                            })\n                        })\n                        it('should register a new user', (done) => {\n                            chai.request(app)\n                            .post('/api/v1/register')\n                            .set('content-type', 'application/json')\n                            .send({\n                                email: 'dodo@gmail.com',\n                                username: 'dodo',\n                                password: 'dodosecret'\n                            })\n                            .end((err, res) => {\n                                expect(res.status).to.equal(200);\n                                expect(res.body.message).to.equal('you have been successfully registered');\n                                done();\n                            })\n                        })\n                    })\n                })\n            })\n        })\n    })\n})"]}