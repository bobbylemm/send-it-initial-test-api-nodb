{"version":3,"sources":["../../test/test.test.js"],"names":["expect","chai","use","chaiHttp","describe","it","done","request","app","get","end","req","res","status","to","equal","body","be","an","parcels","id","put","err","delete","user1","allUsers","post","set","send","packageName","destination","pickupLocation","price","message"],"mappings":"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","file":"test.test.js","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport app from '../src/app';\nimport allUsers from '../database/usersdb'\nconst { expect } = chai;\n\nchai.use(chaiHttp);\n\ndescribe(\"get/parcels\", () => {\n    describe(\"get/parcels/:id\", () => {\n        describe(\"put/parcels/:id\", () => {\n            describe(\"delete/parcels/:id\", () => {\n                describe(\"post/parcels\", () => {\n                    it(\"it should get all parcel orders\", (done) => {\n                        chai.request(app).get(\"/api/v1/parcels\").end((req, res) => {\n                            expect(res.status).to.equal(200);\n                            expect(res.body).to.be.an('object');\n                            expect(res.body.parcels).to.be.an('array');\n                            done();\n                        })\n                    })\n                    // \n                    it('should get a specific parcel order', (done) => {\n                        const id = 1;\n                        chai.request(app).get(`/api/v1/parcels/${id}`).end((req, res) => {\n                            expect(res.status).to.equal(200);\n                            expect(res.body).to.be.an('object');\n                            done();\n                        })\n                    })\n                    // for the put request\n                    it('should update the status of a parcel order', (done) => {\n                        const id = 1;\n                        chai.request(app)\n                        .put(`/api/v1/parcels/${id}`)\n                        .end((err, res) => {\n                            expect(res.status).to.equal(200);\n                            done();\n                        })\n                    })\n                    // this is the test for the delete end-point\n                    it('should delete a parcel order', (done) => {\n                        const id = 1;\n                        chai.request(app)\n                        .delete(`/api/v1/parcels/${id}`)\n                        .end((err, res) => {\n                            expect(res.status).to.equal(200);\n                            done();\n                        })\n                    })\n                    it('should not create a parcel order if not logged in', (done) => {\n                        let user1 = allUsers[0]\n                        chai.request(app)\n                        .post('/api/v1/parcels')\n                        .set('content-type','application/json')\n                        .send({\n                            packageName: \"fridge\",\n                            destination: \"lagos\",\n                            pickupLocation: \"iyana ipaja\",\n                            status: \"enroute\",\n                            price: \"45000 naira\"\n                        })\n                        .end((err, res) => {\n                            expect(res.status).to.equal(400);\n                            expect(res.body.message).to.equal('could not add new parcel')\n                            done();\n                        })\n                    })\n                })\n            })\n        })\n    })\n})"]}