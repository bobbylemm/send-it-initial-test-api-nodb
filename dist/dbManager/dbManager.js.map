{"version":3,"sources":["../../dbManager/dbManager.js"],"names":["dotenv","config","pool","Pool","development","DbManager","q","query","response","console","log","error","userId","userName","email","password","parcelId","packageName","destination","pickupLocation","price"],"mappings":";;;;;;;;AAAA;;AACA;;;;AACA;;;;;;;;;;AAEAA,iBAAOC,MAAP;AACA;AACA,IAAMC,OAAO,IAAIC,QAAJ,CAASF,gCAAOG,WAAhB,CAAb;;IAEMC,S;;;;;;;;AAYF;;;;;;;;;AAGcC,iC,GAAI,sE;;uCACWJ,KAAKK,KAAL,CAAWD,CAAX,C;;;AAAjBE,wC;;AACJC,wCAAQC,GAAR,CAAYF,QAAZ;;;;;;;;AAEAC,wCAAQE,KAAR;;;;;;;;;;;;;;;;AAGR;;;;;kGACwBC,M;;;;;;;AAEVN,iC,GAAI,kG;;uCACW,KAAKJ,IAAL,CAAUK,KAAV,CAAgBD,CAAhB,EAAmB,CAACM,MAAD,CAAnB,C;;;AAAjBJ,wC;;AACJC,wCAAQC,GAAR,CAAYF,QAAZ;;;;;;;;AAEAC,wCAAQE,KAAR;;;;;;;;;;;;;;;;AAGR;;;;;kGACsBE,Q,EAAUC,K,EAAOC,Q;;;;;;;AAEzBT,iC,GAAI,kE;;uCACWJ,KAAKK,KAAL,CAAWD,CAAX,EAAc,CAACO,QAAD,EAAWC,KAAX,EAAkBC,QAAlB,CAAd,C;;;AAAjBP,wC;;AACJC,wCAAQC,GAAR,CAAYF,QAAZ;;;;;;;;AAEAC,wCAAQC,GAAR;;;;;;;;;;;;;;;;;;;kGApCmBM,Q,EAAUC,W,EAAaC,W,EAAaC,c,EAAgBC,K,EAAOR,M,EAAQC,Q;;;;;;;AAEhFP,iC,GAAI,mG;;uCACWJ,KAAKK,KAAL,CAAWD,CAAX,EAAc,CAACU,QAAD,EAAWC,WAAX,EAAwBC,WAAxB,EAAqCC,cAArC,EAAqDC,KAArD,EAA4DR,MAA5D,EAAoEC,QAApE,CAAd,C;;;AAAjBL,wC;;AACJC,wCAAQC,GAAR,CAAYF,QAAZ;;;;;;;;AAEAC,wCAAQE,KAAR;;;;;;;;;;;;;;;;;;;;;kBAmCGN,S","file":"dbManager.js","sourcesContent":["import { Pool } from 'pg';\nimport dotenv from 'dotenv';\nimport config from '../config/databaseConfiguration';\n\ndotenv.config();\n// const pool = new pg.Pool(config.development);\nconst pool = new Pool(config.development);\n\nclass DbManager {\n\n\n  static async insertNewParcel(parcelId, packageName, destination, pickupLocation, price, userId, userName) {\n        try {\n            const q = 'INSERT INTO parcels(parcelId, packageName, destination, pickupLocation, price, userId, userName);';\n            let response = await pool.query(q, [parcelId, packageName, destination, pickupLocation, price, userId, userName]);\n            console.log(response);\n        }catch(e) {\n            console.error(e)\n        }\n    }\n    // get all parcels\n    async getAllParcels() {\n        try {\n            const q = 'SELECT packageName, destination, pickupLocation, price FROM parcels;';\n            let response = await pool.query(q);\n            console.log(response);\n        }catch(e) {\n            console.error(e)\n        }\n    }\n    // get all parcels by a speciific user\n    async getAllUserParcels(userId) {\n        try {\n            const q = 'SELECT packageName, destination, pickupLocation, price, userName FROM parcels WHERE userId = $1;';\n            let response = await this.pool.query(q, [userId]);\n            console.log(response);\n        }catch(e) {\n            console.error(e)\n        }\n    }\n    // this is to register a new user\n    async registerNewUser(userName, email, password) {\n        try {\n            const q = 'INSERT INTO users(userName, email, password) VALUES($1, $2, $3);';\n            let response = await pool.query(q, [userName, email, password]);\n            console.log(response);\n        }catch(e) {\n            console.log(e)\n        }\n    }\n\n}\nexport default DbManager;"]}